{"version":3,"sources":["components/AlertMessage.js","components/AddDataForm.js","components/EditDataForm.js","utils.js","components/ResultsTable.js","components/DataTable.js","components/Header.js","App.js","registerServiceWorker.js","index.js"],"names":["AlertMessage","props","react_default","a","createElement","Alert","variant","className","message","Button","onClick","setState","AddDataForm","initialFormState","id","name","oneTime","monthly","type","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","numberError","setNumberError","_useState5","_useState6","typeError","setTypeError","_useState7","_useState8","nameError","setNameError","_useState9","_useState10","success","setSuccess","handleInputChange","event","console","log","target","value","_event$target","objectSpread","defineProperty","Form","onSubmit","preventDefault","addData","setTimeout","Row","Col","sm","span","offset","Control","as","onChange","disabled","placeholder","step","min","components_AlertMessage","EditDataForm","currentData","dataType","useEffect","parseInt","updateData","setEditingData","deleteData","title","commaSeparateNumber","val","test","toString","replace","formatNumber","number","decimalPlace","toFixed","ResultsTable","revenue","setRevenue","expense","setExpense","term","setTerm","sumOneTimeRevenue","reduce","sum","revenueItem","sumMonthlyRevenue","sumTotalRevenue","sumOneTimeExpense","expenseItem","sumMonthlyExpense","sumTotalExpense","monthlyContributionProfit","totalContributionProfit","contributionMargin","capitalROI","Table","striped","bordered","hover","bgcolor","DataTable","responsive","dataSource","length","align","colSpan","deleteAllRevenue","deleteAllExpenses","map","index","key","editDataRow","Header","alt","src","width","height","deleteAllRevenueAndExpenses","App","editingData","setCurrentData","filter","components_Header","components_EditDataForm","updatedData","components_AddDataForm","newData","parseFloat","concat","toConsumableArray","components_DataTable","components_ResultsTable","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dadbba47.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Button,\n  Alert,\n } from 'react-bootstrap'\n\nconst AlertMessage = props => {\n  return (\n    <Alert variant={props.variant}>\n      <p className=\"mb-0\">\n        {props.message}\n      </p>\n      <hr />\n      <Button variant=\"secondary\" onClick={(() => props.setState(false))}>Close Alert</Button>\n    </Alert>\n  )\n}\n\nexport default AlertMessage\n","import React, { useState } from 'react'\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n } from 'react-bootstrap'\n import AlertMessage from './AlertMessage'\n\nconst AddDataForm = props => {\n\n/************ Functional component state *************************/\n\n  const initialFormState = { id: null, name: '', oneTime: 0, monthly: 0, type: 'default' }\n  const [data, setData] = useState(initialFormState)\n  const [numberError, setNumberError] = useState(false)\n  const [typeError, setTypeError] = useState(false)\n  const [nameError, setNameError] = useState(false)\n  const [success, setSuccess] = useState(false)\n\n/********************* Event Handling *****************************/\n\n  const handleInputChange = event => {\n    console.log('EVENT TARGET Name>>>', event.target.name);\n    console.log('EVENT TARGET value>>>', event.target.value)\n    const { name, value } = event.target\n    setData({...data, [name]: value})\n  }\n\n  //Function remove success alert after 3 seconds\n  const handleSuccess = () => setTimeout(function () {\n        setSuccess(false);\n    }, 3000)\n/********************* Component Return ***************************/\n\n  return (\n      <div>\n        <h2>Add Expense or Revenue</h2>\n        <Form onSubmit={event => {\n          event.preventDefault()\n          console.log('Data is', data);\n      /***** Clear existing errors before checking *****/\n          setNumberError(false)\n          setTypeError(false)\n          setNameError(false)\n      /******** Error Handling Before Submission *****/\n          if(!data.oneTime && data.oneTime !== 0){\n            setNumberError(true)\n          }\n          else if (!data.monthly && data.monthly !== 0){\n            setNumberError(true)\n          }\n          else if (data.type === 'default'){\n            setTypeError(true)\n          }\n          else if (data.name === \"\"){\n            setNameError(true)\n          }\n      /********** Add the data if no errors *********/\n          else {\n            props.addData(data)\n            console.log('Inital Form State before reset is>>', initialFormState);\n      /********* Form back to the inital state *******/\n            setSuccess(true)\n            handleSuccess()\n            setData(initialFormState)\n          }\n        }}>\n    {/************** Form Input Fields *****************/}\n          <Row className=\"input-field\">\n            <Col sm={{ span: 2, offset: 1}} className=\"input-field\">\n              <Form.Control as=\"select\" name=\"type\" value={data.type} onChange={handleInputChange}>\n                  <option value=\"default\" name=\"default\" disabled={false}>Select Type</option>\n                  <option value=\"Revenue\" name=\"revenue\">Revenue</option>\n                  <option value=\"Expense\" name=\"expense\">Expense</option>\n              </Form.Control>\n            </Col>\n            <Col sm={3} className=\"input-field\">\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                value={data.name}\n                onChange={handleInputChange}\n              />\n            </Col>\n            <Col sm={2} className=\"input-field\">\n              <Form.Control\n                type=\"number\"\n                name=\"oneTime\"\n                placeholder=\"One-Time Amount\"\n                step=\"0.01\"\n                min=\"0\"\n                value={data.oneTime}\n                onChange={handleInputChange}\n              />\n            </Col>\n            <Col sm={2} className=\"input-field\">\n              <Form.Control\n                type=\"number\"\n                name=\"monthly\"\n                placeholder=\"Monthly Amount\"\n                step=\"0.01\"\n                min=\"0\"\n                value={data.monthly}\n                onChange={handleInputChange}\n              />\n            </Col>\n            <Col sm={1} className=\"add-form-button\">\n              <Button type=\"submit\">\n                Add\n              </Button>\n            </Col>\n          </Row>\n  {/******************Error Handling Alerts**********************/}\n          {success &&\n            <AlertMessage\n              variant=\"success\"\n              message=\"Your entry was successfully added!\"\n              setState={setSuccess}\n              />\n          }\n          {numberError &&\n            <AlertMessage\n              variant=\"danger\"\n              message=\"Make sure to enter a one-time or monthly amount. If you don't have one, enter 0\"\n              setState={setNumberError}/>\n          }\n\n          {typeError &&\n            <AlertMessage\n              variant=\"danger\"\n              message=\"Make sure to select if your entry is a Revenue or an Expense.\"\n              setState={setTypeError}/>\n          }\n          {nameError &&\n            <AlertMessage\n              variant=\"danger\"\n              message=\"Make sure to add a name to your entry.\"\n              setState={setNameError}/>\n          }\n        </Form>\n      </div>\n  )\n}\n\nexport default AddDataForm\n","import React, { useState, useEffect } from 'react'\nimport {\n  Row,\n  Col,\n  Button,\n  Form\n } from 'react-bootstrap'\n import AlertMessage from './AlertMessage'\n\nconst EditDataForm = props => {\n\n/*************** Functional Component State ****************/\n\n  const [data, setData] = useState(props.currentData)\n  const [numberError, setNumberError] = useState(false)\n  const [nameError, setNameError] = useState(false)\n  console.log('Edit form Data Type', data);\n  const dataType = data.type\n\n/********************* Listen for Prop Changes *************/\n  useEffect(() => {\n    setData(props.currentData)\n  }, [props])\n\n/********************** Event Handling ************************/\n\n  const handleInputChange = event => {\n    console.log('EVENT TARGET Name>>>', event.target.name);\n    console.log('EVENT TARGET value>>>', event.target.value)\n    const { name, value } = event.target\n    if(name === 'oneTime' || name === 'monthly'){\n      setData({...data, [name]: parseInt(value)})\n    }\n    else {\n      setData({ ...data, [name]: value })\n    }\n  }\n\n  const handleDelete = () => {\n    props.deleteData(data.id, dataType)\n    props.setEditingData(false)\n  }\n\n/********************* Component Return *************************/\n\n  return (\n    <div>\n      <h2>Edit {dataType} Entry</h2>\n      <Form\n        onSubmit={event => {\n          event.preventDefault()\n          console.log('Updated Revenue Item>>>', data);\n          setNumberError(false)\n          setNameError(false)\n\n    /********* Error Handling Before Submission *********/\n          if(!data.oneTime && data.oneTime !== 0){\n            setNumberError(true)\n          }\n          else if (!data.monthly && data.monthly !== 0){\n            setNumberError(true)\n          }\n          else if (data.name === \"\"){\n            setNameError(true)\n          }\n          else {\n            setNumberError(false)\n            setNameError(false)\n            props.updateData(data.id, data)\n          }\n        }}\n      >\n      {/***************** Form Fields ******************/}\n        <Row className=\"input-field\">\n          <Col sm={3} className=\"input-field\">\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              value={data.name}\n              onChange={handleInputChange}\n            />\n          </Col>\n          <Col sm={2} className=\"input-field\">\n            <Form.Control\n              type=\"number\"\n              name=\"oneTime\"\n              placeholder=\"One-Time Amount\"\n              step=\"0.01\"\n              min=\"0\"\n              value={data.oneTime}\n              onChange={handleInputChange}\n            />\n          </Col>\n          <Col sm={2} className=\"input-field\">\n            <Form.Control\n              type=\"number\"\n              name=\"monthly\"\n              placeholder=\"Monthly Amount\"\n              step=\"0.01\"\n              min=\"0\"\n              value={data.monthly}\n              onChange={handleInputChange}\n            />\n          </Col>\n          <Col sm={2} className=\"add-form-button\">\n            <Button type=\"submit\">Update {dataType}</Button>\n          </Col>\n          <Col sm={2} className=\"add-form-button\">\n            <Button variant=\"secondary\" onClick={() => props.setEditingData(false)} className=\"button muted-button\">\n              Cancel\n            </Button>\n          </Col>\n          <Col sm={2} className=\"add-form-button\">\n            <Button variant=\"danger\" onClick={() => handleDelete()} className=\"button muted-button\">\n              Delete {dataType} Entry\n            </Button>\n          </Col>\n        </Row>\n\n    {/********** Error Handling Alerts *************/}\n\n        {numberError &&\n          <AlertMessage\n            variant=\"danger\"\n            title=\"Woops! Something didn't go right!\"\n            message=\"Make sure to enter a one-time or monthly amount! If you don't have one, enter $0\"\n            setState={setNumberError}/>\n        }\n        {nameError &&\n          <AlertMessage\n            variant=\"danger\"\n            title=\"Woops! Something didn't go right!\"\n            message=\"Make sure to add a name to your entry!\"\n            setState={setNameError}/>\n        }\n      </Form>\n    </div>\n  )\n}\n\nexport default EditDataForm\n","\n//Regex form Comma Separated Number Format\nexport function commaSeparateNumber(val){\n  while (/(\\d+)(\\d{3})/.test(val.toString())){\n    val = val.toString().replace(/(\\d+)(\\d{3})/, '$1'+','+'$2');\n  }\n  return val;\n}\n\n//Function to convert number to comma separated and to a provided number of decimal places\nexport const formatNumber = (number, decimalPlace) => {\n  return commaSeparateNumber((number).toFixed(decimalPlace))\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n  Form,\n  Col,\n  Table\n } from 'react-bootstrap'\n import { commaSeparateNumber, formatNumber } from '../utils'\n\nconst ResultsTable = props => {\n\n/*************** Functional Component State ********************/\n\n  const [revenue, setRevenue] = useState(props.revenue)\n  const [expense, setExpense] = useState(props.expense)\n  const [term, setTerm] = useState(12)\n\n/************************ Event Handling **********************/\n\n  const handleTermChange = event => {\n    const { value } = event.target\n    setTerm(value)\n  }\n\n/*************** Listen for Props Changes **********************/\n\n  useEffect(() => {\n    setRevenue(props.revenue)\n    setExpense(props.expense)\n  }, [props])\n\n/***************** Revenue Calculations ******************/\n\n  const sumOneTimeRevenue = (revenue.reduce((sum, revenueItem) => {\n    return sum + revenueItem.oneTime\n  }, 0))\n  const sumMonthlyRevenue = revenue.reduce((sum, revenueItem) => {\n    return sum + revenueItem.monthly\n  }, 0)\n  const sumTotalRevenue = sumOneTimeRevenue + (sumMonthlyRevenue * term)\n\n/***************** Expense Calculations ******************/\n  const sumOneTimeExpense = expense.reduce((sum, expenseItem) => {\n    return sum + expenseItem.oneTime\n  }, 0)\n  const sumMonthlyExpense = expense.reduce((sum, expenseItem) => {\n    return sum + expenseItem.monthly\n  }, 0)\n  const sumTotalExpense = sumOneTimeExpense + (sumMonthlyExpense * term)\n\n/****** Profit, Contribution, Margin, and ROI Calculations *******/\n\n  const monthlyContributionProfit = sumMonthlyRevenue - sumMonthlyExpense\n\n  const totalContributionProfit = sumTotalRevenue - sumTotalExpense\n\n  //Handle case where total revenue would be 0 and cause NaN\n  const contributionMargin = sumTotalRevenue !== 0 ? ((totalContributionProfit / sumTotalRevenue) * 100).toFixed(0) : 0\n\n  const capitalROI = (sumTotalExpense - sumTotalRevenue === 0) || (sumMonthlyRevenue - sumMonthlyExpense === 0) ? 0 : ((sumOneTimeExpense - sumOneTimeRevenue) / monthlyContributionProfit).toFixed(1)\n\n/******************* Component Return ***************************/\n  return (\n    <div className=\"flex-large\">\n      <h2>Results</h2>\n  {/********* Term Selection Dropdown*******/}\n      <p>Select the term length in months</p>\n      <Col sm={{ span: 2, offset: 0}} className=\"input-field\">\n        <Form.Control as=\"select\" name=\"term\" value={term} onChange={handleTermChange}>\n            <option value=\"default\" name=\"default\" disabled={false}>Select Type</option>\n            <option value={12} name=\"12 months\">12-months</option>\n            <option value={24} name=\"24 months\">24-months</option>\n            <option value={36} name=\"36 moths\">36-months</option>\n            <option value={48} name=\"48 months\">48-months</option>\n            <option value={60} name=\"60 months\">60-months</option>\n        </Form.Control>\n      </Col>\n  {/************* Results Table ************/}\n      <Table striped bordered hover className=\"totals-table\">\n        <thead>\n          <tr>\n            <th></th>\n            <th>One-Time</th>\n            <th>Monthly</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Revenue</td>\n            <td>${formatNumber(sumOneTimeRevenue, 2)}</td>\n            <td>${formatNumber(sumMonthlyRevenue, 2)}</td>\n            <td>${formatNumber(sumTotalRevenue, 2)}</td>\n          </tr>\n          <tr>\n            <td>Expenses</td>\n            <td>${formatNumber(sumOneTimeExpense, 2)}</td>\n            <td>${formatNumber(sumMonthlyExpense, 2)}</td>\n            <td>${formatNumber(sumTotalExpense, 2)}</td>\n          </tr>\n          <tr>\n            <td>Contribution Profit</td>\n            <td></td>\n            <td bgcolor={monthlyContributionProfit < 0 && \"red\"}>${formatNumber(monthlyContributionProfit, 2)}</td>\n            <td bgcolor={totalContributionProfit < 0 && \"red\"}>${formatNumber(totalContributionProfit, 2)}</td>\n          </tr>\n          <tr>\n            <td>Contribution Margin</td>\n            <td></td>\n            <td></td>\n            <td bgcolor={contributionMargin < 0 && \"red\"}>{contributionMargin}%</td>\n          </tr>\n          <tr>\n            <td>Capital ROI (monthly)</td>\n            <td></td>\n            <td></td>\n            <td bgcolor={capitalROI < 0 && \"red\"}>{capitalROI}</td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  )\n}\nexport default ResultsTable\n","import React from 'react'\nimport '../App.css';\nimport {\n  Button,\n  Table\n } from 'react-bootstrap'\nimport { commaSeparateNumber } from '../utils'\nimport styles from '../App.css';\n\nconst DataTable = props => {\n\n/************************* Component Return ***********************/\n\n  return (\n    <div className=\"flex-large\">\n      <h2>{props.type}s</h2>\n    <Table striped bordered hover responsive className=\"data-table\">\n        <thead>\n          <tr>\n            <th>{props.type}</th>\n            <th>One-Time</th>\n            <th>Monthly</th>\n          {/**** Give a button to clear data of present *****/}\n            {props.dataSource.length > 0 &&\n            <th align=\"center\" colSpan={2}><Button variant=\"warning\" onClick={props.type === \"Revenue\" ? props.deleteAllRevenue : props.deleteAllExpenses}>Clear All {props.type}s</Button>\n            </th>\n            }\n          </tr>\n        </thead>\n        <tbody>\n    {/*If there is data, show that in the table. The below could become a separate component if needed*/}\n          {props.dataSource.length > 0 ? (\n            props.dataSource.map((data, index) => (\n              <tr key={index}>\n                <td>{data.name}</td>\n                <td>${commaSeparateNumber((data.oneTime).toFixed(2))}</td>\n                <td>${commaSeparateNumber((data.monthly).toFixed(2))}</td>\n                <td><Button variant=\"danger\" onClick={() => props.deleteData(data.id, props.type)}>Delete</Button></td>\n                <td><Button variant=\"success\" onClick={() => props.editDataRow(data, props.type)}>Edit</Button></td>\n              </tr>\n            ))\n          )\n        /*Else show \"No Data\"*/\n          : (\n              <tr>\n                <td colSpan={4}>No {props.type} Data</td>\n              </tr>\n            )\n          }\n\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default DataTable\n","import React from 'react'\nimport {\n  Navbar,\n  Button\n } from 'react-bootstrap'\n import styles from '../App.css'\n\n\nconst Header = props => (\n  <div className=\"navBar\" >\n        <img\n          alt=\"\"\n          src='https://veeloinc.com/wp-content/uploads/2017/04/roi.png'\n          width=\"100\"\n          height=\"90\"\n          className=\"d-inline-block align-center\"\n        />\n        <h1 className=\"title\">ROI Calculator</h1>\n        <Button onClick={props.deleteAllRevenueAndExpenses}>Clear Data</Button>\n  </div>\n)\n\nexport default Header\n","import React, { useState } from 'react';\nimport {\n\n } from 'react-bootstrap'\nimport AddDataForm from './components/AddDataForm'\nimport EditDataForm from './components/EditDataForm'\nimport ResultsTable from './components/ResultsTable'\nimport DataTable from './components/DataTable'\nimport Header from './components/Header'\nimport styles from './App.css';\n\n\nconst App = () => {\n\n/*********************** App Data ***********************/\n\n  const revenueData = [\n    {id: 1, name: \"Item 1\", oneTime:100, monthly: 50, type: \"Revenue\"},\n    {id: 2, name: \"Item 2\", oneTime:50, monthly: 25, type: \"Revenue\" },\n    {id: 3, name: \"Item 3\", oneTime:25, monthly: 85, type: \"Revenue\" }\n  ]\n  const expenseData = [\n    {id: 1, name: \"Expense 1\", oneTime:500, monthly: 20, type: \"Expense\" },\n    {id: 2, name: \"Expense 2\", oneTime:200, monthly: 40, type: \"Expense\" }\n  ]\n\n  const initialDataEditForm = {id: null, name: '', oneTime: 0, monthly: 0, type: \"\"}\n\n/************* Functional component state *************************/\n\n  const [revenue, setRevenue] = useState(revenueData)\n  const [expense, setExpense] = useState(expenseData)\n  const [editingData, setEditingData] = useState(false)\n  const [currentData, setCurrentData] = useState(initialDataEditForm)\n\n/*********************** Methods *********************************/\n\n  /******* Add Data *******/\n  const addData = newData => {\n    newData.oneTime = parseFloat(newData.oneTime)\n    newData.monthly = parseFloat(newData.monthly)\n    console.log('NEWREVENUE is >>', newData);\n    if(newData.type === \"Revenue\"){\n      newData.id = revenue.length + 1\n      console.log('New Data in revenue is', newData);\n      setRevenue([...revenue, newData])\n    }\n    else {\n      newData.id = expense.length + 1\n      setExpense([...expense, newData])\n    }\n  }\n  /********* Delete Data ********/\n  const deleteAllExpenses = () => {\n    setExpense([])\n  }\n  const deleteAllRevenue = () => {\n    setRevenue([])\n  }\n  const deleteAllRevenueAndExpenses = () => {\n    deleteAllRevenue()\n    deleteAllExpenses()\n  }\n  //Delete a single Expense or Revenue Entry\n  const deleteData = (id, type) => {\n    console.log('Delete Data Clicked', id, type);\n    if(type === 'Revenue'){\n      setRevenue(revenue.filter(revenue => revenue.id !== id))\n    }\n    else{\n      setExpense(expense.filter(expense => expense.id !== id))\n    }\n  }\n\n  /********** Edit Data **********/\n  const editDataRow = (data, type) => {\n    setEditingData(true)\n    if(type === 'Revenue') {\n      console.log('EditDataRow triggered');\n      setCurrentData({id: data.id, name: data.name, oneTime: data.oneTime, monthly: data.monthly, type: 'Revenue'})\n    }\n    else {\n      console.log('Edit data row else triggered', type);\n      setCurrentData({id: data.id, name: data.name, oneTime: data.oneTime, monthly: data.monthly, type: 'Expense'})\n    }\n  }\n\n  const updateData = (id, updatedData) => {\n    setEditingData(false)\n    if(updatedData.type === \"Revenue\") {\n    setRevenue(revenue.map(revenue => (revenue.id === id ? updatedData : revenue)))\n    }\n    else {\n      setExpense(expense.map(expense => (expense.id === id ? updatedData : expense)))\n    }\n  }\n\n/************************ App Return *****************************/\n\n  return (\n    <div className=\"container\">\n      <Header\n        deleteAllRevenueAndExpenses={deleteAllRevenueAndExpenses}/>\n      <div className=\"flex-row\">\n        <div className=\"flex-large\">\n          {editingData ? (\n            <EditDataForm\n              setEditingData={setEditingData}\n              setRevenue={setRevenue}\n              deleteData={deleteData}\n              currentData={currentData}\n              updateData={updateData}\n            />)\n          : (\n            <AddDataForm\n              addData={addData}\n            />)\n          }\n\n        <DataTable\n          type=\"Revenue\"\n          dataSource={revenue}\n          deleteData={deleteData}\n          deleteAllRevenue={deleteAllRevenue}\n          editingData={editingData}\n          editDataRow={editDataRow}\n        />\n        <DataTable\n          type=\"Expense\"\n          dataSource={expense}\n          deleteData={deleteData}\n          deleteAllExpenses={deleteAllExpenses}\n          editingData={editingData}\n          editDataRow={editDataRow}\n        />\n        <ResultsTable\n          revenue={revenue}\n          expense={expense}\n        />\n        </div>\n      </div>\n    </div>\n  )\n}\n\n//Original Project Code Below\n\n\n// class App extends Component {\n//   constructor() {\n//     super()\n//     // \"seed\" data initially\n//     this.state = {\n//       revenue: [\n//       {\n//         name: 'Item 1',\n//         oneTime: 100,\n//         monthly: 50\n//       },\n//       {\n//         name: 'Item 2',\n//         oneTime: 50,\n//         monthly: 25\n//       },\n//       {\n//         name: 'Item 3',\n//         oneTime: 25,\n//         monthly: 85\n//       }],\n//       expenses:[{\n//         name: 'Expense 1',\n//         oneTime: 500,\n//         monthly: 20.00\n//       },\n//       {\n//         name: 'Expense 2',\n//         oneTime: 200,\n//         monthly: 40\n//       }],\n//       oneTimeRevenue: 175,\n//       oneTimeExpense: 700,\n//       monthlyRevenue: 160,\n//       monthlyExpense: 60,\n//       newType: '',\n//       newName: '',\n//       newOneTime: '',\n//       newMonthly: '',\n//       error: false\n//     }\n//\n//     this.handleDelete = this.handleDelete.bind(this)\n//     this.handleAdd = this.handleAdd.bind(this)\n//\n//     // controlled form elements functions\n//     this.handleTypeChange = this.handleTypeChange.bind(this)\n//     this.handleNameChange = this.handleNameChange.bind(this)\n//     this.handleOneTimeChange = this.handleOneTimeChange.bind(this)\n//     this.handleMonthlyChange = this.handleMonthlyChange.bind(this)\n//   }\n//\n//   // Delete expense or revenue from list\n//   handleDelete(type, index) {\n//     // listType will be 'expenses' or 'revenue' depending on item to delete\n//     let listType = this.state[type]\n//     // recalculate and set totals in state\n//     if (type === 'expenses') {\n//       this.setState({\n//         oneTimeExpense: this.state.oneTimeExpense - this.state.expenses[index]['oneTime'],\n//         monthlyExpense: this.state.monthlyExpense - this.state.expenses[index]['monthly'],\n//       })\n//     } else {\n//       // for revenue\n//       this.setState({\n//         oneTimeRevenue: this.state.oneTimeRevenue - this.state.revenue[index]['oneTime'],\n//         monthlyRevenue: this.state.monthlyRevenue - this.state.revenue[index]['monthly'],\n//       })\n//     }\n//     // remove list item from state array\n//     this.setState({\n//       [listType]: listType.splice(index, 1),\n//     })\n//   }\n//\n//   // controlled form elements, watch for changes\n//   handleTypeChange(e) {\n//     this.setState({\n//       newType: e.target.value\n//     })\n//   }\n//   handleNameChange(e) {\n//     this.setState({\n//       newName: e.target.value\n//     })\n//   }\n//\n//   handleMonthlyChange(e) {\n//     this.setState({\n//       newMonthly: Number(e.target.value)\n//     })\n//   }\n//   handleOneTimeChange(e) {\n//     this.setState({\n//       newOneTime: Number(e.target.value)\n//     })\n//   }\n//\n//   // add new expense or revenue\n//   handleAdd(e) {\n//     e.preventDefault()\n//     // handle form errors, allows one-time and revenue amounts to be 0\n//     if (!this.state.newType || !this.state.newName || (!this.state.newOneTime && this.state.newOneTime !== 0) || (!this.state.newMonthly && this.state.newMonthly !== 0)) {\n//       this.setState({\n//         error: true\n//       })\n//     }\n//     // if there are no form errors, add accordingly\n//     else {\n//       // typeOfAmount will be either 'expenses' or 'revenue'\n//       let typeOfAmount = this.state.newType\n//       let monthly = typeOfAmount === 'expenses' ? 'monthlyExpense' : 'monthlyRevenue'\n//       let oneTime = typeOfAmount === 'expenses' ? 'oneTimeExpense' : 'oneTimeRevenue'\n//       // grab state array of revenues or expenses\n//       let items = this.state[typeOfAmount]\n//       items.push({\n//         name: this.state.newName,\n//         oneTime:this.state.newOneTime,\n//         monthly: this.state.newMonthly\n//       })\n//       // set state with new totals and items array, clear errors displaying and form contents\n//       this.setState({\n//         error: false,\n//         [typeOfAmount]: items,\n//         [monthly]: this.state[monthly] + this.state.newMonthly,\n//         [oneTime]: this.state[oneTime] + this.state.newOneTime,\n//         //  Clear values in form\n//         newName: '',\n//         newMonthly: '',\n//         newOneTime: '',\n//         newType: ''\n//       })\n//     }\n//   }\n//\n//   render() {\n//     // create table rows from revenue state list\n//     let revenueTableData = this.state.revenue.map((item, index) => {\n//       return (\n//         <tr key={\"revenue\" + index}>\n//           <td>{item.name}</td>\n//           <td>${item.oneTime.toFixed(2)}</td>\n//           <td>${item.monthly.toFixed(2)}</td>\n//           <td><Button onClick={() => this.handleDelete('revenue', index)}>Delete</Button></td>\n//         </tr>\n//       )\n//     })\n//     // create table rows from expenses state list\n//     let expensesTableData = this.state.expenses.map((expense, index) => {\n//       return (\n//         <tr key={\"expense\" + index}>\n//           <td>{expense.name}</td>\n//           <td>${expense.oneTime.toFixed(2)}</td>\n//           <td>${expense.monthly.toFixed(2)}</td>\n//           <td><Button onClick={() => this.handleDelete('expenses', index)}>Delete</Button></td>\n//         </tr>\n//       )\n//     })\n//\n//     // Calculations for totals\n//     let totalRevenue = this.state.oneTimeRevenue + (this.state.monthlyRevenue * 12)\n//     let totalExpense = this.state.oneTimeExpense + (this.state.monthlyExpense * 12)\n//     let monthlyContributionProfit = this.state.monthlyRevenue - this.state.monthlyExpense\n//     let totalContributionProfit = totalRevenue - totalExpense\n//     // handle case where totalRevenue is 0 (to avoid -Infinity and NaN)\n//     let contributionMargin = totalRevenue !== 0 ? (totalContributionProfit / totalRevenue * 100).toFixed(0) : 0\n//     // handle case where totalExpense and totalRevenue are 0 (to avoid NaN)\n//     let capitalROI = (totalExpense === 0 && totalRevenue === 0) ? 0 : ((this.state.oneTimeExpense - this.state.oneTimeRevenue) / monthlyContributionProfit).toFixed(1)\n//\n//     return (\n//       <div>\n//         <h1 className=\"text-center\">ROI Calculator</h1>\n//         {/* Add new expense or revenue form */}\n//         <Form className=\"addExpenseOrRevenueForm\" onSubmit={this.handleAdd}>\n//           <Row className=\"input-field\">\n//             <Col sm={{ span: 2, offset: 1}} className=\"input-field\">\n//               <Form.Control\n//                 as=\"select\"\n//                 onChange = {this.handleTypeChange}\n//                 value={this.state.newType ? this.state.newType : 'choose'}\n//                 >\n//                 <option value=\"choose\" disabled={true}>Select Type</option>\n//                 <option value=\"revenue\">Revenue</option>\n//                 <option value=\"expenses\">Expense</option>\n//               </Form.Control>\n//             </Col>\n//             <Col sm={3} className=\"input-field\">\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Name\"\n//                 onChange = {this.handleNameChange}\n//                 value={this.state.newName ? this.state.newName : ''}\n//               />\n//             </Col>\n//             <Col sm={2} className=\"input-field\">\n//               <Form.Control\n//                 type=\"number\"\n//                 placeholder=\"One-Time Amount\"\n//                 onChange = {this.handleOneTimeChange}\n//                 step=\"0.01\"\n//                 min=\"0\"\n//                 value={(this.state.newOneTime || this.state.newOneTime === 0) ? this.state.newOneTime : ''}\n//               />\n//             </Col>\n//             <Col sm={2} className=\"input-field\">\n//               <Form.Control\n//                 type=\"number\"\n//                 placeholder=\"Monthly Amount\"\n//                 onChange = {this.handleMonthlyChange}\n//                 step=\"0.01\"\n//                 min=\"0\"\n//                 value={(this.state.newMonthly || this.state.newMonthly === 0) ? this.state.newMonthly : ''}\n//               />\n//             </Col>\n//             <Col sm={1} className=\"add-form-button\">\n//               <Button type=\"submit\">\n//                 Add\n//               </Button>\n//             </Col>\n//           </Row>\n//         </Form>\n//         {/* form errors */}\n//         { this.state.error &&\n//           <h4 className=\"error text-center\">Please fill out all fields</h4>\n//         }\n//         <div className=\"roi-tables\">\n//           {/* Revenue Table */}\n//           <table className=\"revenue-table\">\n//             <thead>\n//               <tr>\n//                 <th>Revenue</th>\n//               </tr>\n//               <tr>\n//                 <th></th>\n//                 <th>One-Time</th>\n//                 <th>Monthly</th>\n//                 <th></th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {revenueTableData}\n//             </tbody>\n//           </table>\n//           {/* Expenses Table */}\n//           <table className=\"expenses-table\">\n//             <thead>\n//               <tr>\n//                 <th>Expenses</th>\n//               </tr>\n//               <tr>\n//                 <th></th>\n//                 <th>One-Time</th>\n//                 <th>Monthly</th>\n//                 <th></th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {expensesTableData}\n//             </tbody>\n//           </table>\n//           {/* Totals Table */}\n//           <table className=\"totals-table\">\n//             <thead>\n//               <tr>\n//                 <th></th>\n//                 <th>One-Time</th>\n//                 <th>Monthly</th>\n//                 <th>Total</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               <tr>\n//                 <td>Revenue</td>\n//                 <td>${(this.state.oneTimeRevenue).toFixed(2)}</td>\n//                 <td>${(this.state.monthlyRevenue).toFixed(2)}</td>\n//                 <td>${totalRevenue.toFixed(2)}</td>\n//               </tr>\n//               <tr>\n//                 <td>Expenses</td>\n//                 <td>${(this.state.oneTimeExpense).toFixed(2)}</td>\n//                 <td>${(this.state.monthlyExpense).toFixed(2)}</td>\n//                 <td>${totalExpense.toFixed(2)}</td>\n//               </tr>\n//               <tr>\n//                 <td>Contribution Profit</td>\n//                 <td></td>\n//                 <td>${ monthlyContributionProfit.toFixed(2)}</td>\n//                 <td>${ totalContributionProfit.toFixed(2)}</td>\n//               </tr>\n//               <tr>\n//                 <td>Contribution Margin</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td>{contributionMargin}%</td>\n//               </tr>\n//               <tr>\n//                 <td>Capital ROI (monthly)</td>\n//                 <td></td>\n//                 <td></td>\n//                 <td>{capitalROI}</td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n//\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}